1. Scan a string for multiple occurrences of a pattern
2. Substitute a replacement string for a substring
3. Split a string into multiple substrings based on a matching separator.


--------------------------

4.

First some alphabetical characters,
then a comma,
then some alphabetical characters,
then a comma,
then either 'Mr.' or 'Mrs.'

should generate :

[A-Za-z]+,[A-Za-z]+,Mrs?\.

5.

----------------------------------------------------

The character M, followed by the character r, followed by
zero or one of the character s, followed by
zero or one of the character '.'

should generate :

Mrs?\.?

----------------------------------------------------

6.

Need examples for:

module Regexpgen
 module Quantifier
   ZERO_OR_MORE = '*'  
   ONE_OR_MORE  = '+'
 end
 
 module Anchor
   BEGINNING_OF_LINE             = '^'  
   END_OF_LINE                   = '$'
   BEGINNING_OF_STRING           = '\A'
   END_OF_STRING                 = '\z'
   END_OF_STRING_EXCEPT_NEW_LINE = '\Z'
   WORD_BOUNDARY = '\b'
 end
end

----------------------------------------------------

Metacharacters

CARET  				= ^ -> Start          Negate
DOLLAR 				= $ -> End
DOT    				= . -> Wildcard
BAR    				= | -> Or

QUESTION_MARK = ? -> Zero or one
PLUS          = + -> One or more
ASTERISK      = * -> Zero or more

INTERVAL = {min, max}  Min required, max allowed

----------------------------------------------------

Control Characters

ALERT = '\a'
BACKSPACE = '\b'
Escape = '\e'
Form Feed = '\f'
Newline = '\n'
Carriage Return = '\r'
Horizontal Tab = '\t'
Vertical Tab = '\v'

----------------------------------------------------

Class Shorthand

Digit = '\d'
Non Digit = 'D'
Word = '\w'
Non word = '\W'
Whitespace = '\s'
Non whitespace' = '\S'

----------------------------------------------------

Anchor

match at start of string ^
match after any newline ^
match at end of string $
match before string-ending newline $
match before any newline $

----------------------------------------------------

Word Boundary \b
Not Word Boundary \B

----------------------------------------------------

Mode Modifier

Case Insensitive = i
Free-spacing and comments = x
Dot-matches-all = s
Enhanced line-anchor = m

----------------------------------------------------



----------------------------------------------------

Beginning of a line,
followed by c,
followed by a,
follwed by t

should generate:

[^cat]

----------------------------------------------------

Beginning of a line,
followed by c,
followed by a,
follwed by t
followed by end of the line

should generate:

[^cat$]

----------------------------------------------------


